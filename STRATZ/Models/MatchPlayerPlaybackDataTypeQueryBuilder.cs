// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class MatchPlayerPlaybackDataTypeQueryBuilder : GraphQlQueryBuilder<MatchPlayerPlaybackDataTypeQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "abilityLearnEvents", IsComplex = true, QueryBuilderType = typeof(AbilityLearnEventsTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "abilityUsedEvents", IsComplex = true, QueryBuilderType = typeof(AbilityUsedEventsTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "abilityActiveLists", IsComplex = true, QueryBuilderType = typeof(AbilityActiveListTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "itemUsedEvents", IsComplex = true, QueryBuilderType = typeof(ItemUsedEventTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "playerUpdatePositionEvents", IsComplex = true, QueryBuilderType = typeof(PlayerUpdatePositionDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "playerUpdateGoldEvents", IsComplex = true, QueryBuilderType = typeof(PlayerUpdateGoldDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "playerUpdateAttributeEvents", IsComplex = true, QueryBuilderType = typeof(PlayerUpdateAttributeDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "playerUpdateLevelEvents", IsComplex = true, QueryBuilderType = typeof(PlayerUpdateLevelDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "playerUpdateHealthEvents", IsComplex = true, QueryBuilderType = typeof(PlayerUpdateHealthDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "playerUpdateBattleEvents", IsComplex = true, QueryBuilderType = typeof(PlayerUpdateBattleDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "killEvents", IsComplex = true, QueryBuilderType = typeof(KillDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "deathEvents", IsComplex = true, QueryBuilderType = typeof(DeathDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "assistEvents", IsComplex = true, QueryBuilderType = typeof(AssistDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "csEvents", IsComplex = true, QueryBuilderType = typeof(LastHitDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "goldEvents", IsComplex = true, QueryBuilderType = typeof(GoldDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "experienceEvents", IsComplex = true, QueryBuilderType = typeof(ExperienceDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "healEvents", IsComplex = true, QueryBuilderType = typeof(HealDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "heroDamageEvents", IsComplex = true, QueryBuilderType = typeof(HeroDamageDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "towerDamageEvents", IsComplex = true, QueryBuilderType = typeof(TowerDamageDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "inventoryEvents", IsComplex = true, QueryBuilderType = typeof(InventoryTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "purchaseEvents", IsComplex = true, QueryBuilderType = typeof(ItemPurchaseTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "buyBackEvents", IsComplex = true, QueryBuilderType = typeof(BuyBackDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "streakEvents", IsComplex = true, QueryBuilderType = typeof(StreakEventTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "runeEvents", IsComplex = true, QueryBuilderType = typeof(PlayerRuneDetailTypeQueryBuilder) },
                new GraphQlFieldMetadata { Name = "spiritBearInventoryEvents", IsComplex = true, QueryBuilderType = typeof(SpiritBearInventoryTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "MatchPlayerPlaybackDataType"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public MatchPlayerPlaybackDataTypeQueryBuilder WithAbilityLearnEvents(AbilityLearnEventsTypeQueryBuilder abilityLearnEventsTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("abilityLearnEvents", alias, abilityLearnEventsTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptAbilityLearnEvents()
        {
            return ExceptField("abilityLearnEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithAbilityUsedEvents(AbilityUsedEventsTypeQueryBuilder abilityUsedEventsTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("abilityUsedEvents", alias, abilityUsedEventsTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptAbilityUsedEvents()
        {
            return ExceptField("abilityUsedEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithAbilityActiveLists(AbilityActiveListTypeQueryBuilder abilityActiveListTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("abilityActiveLists", alias, abilityActiveListTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptAbilityActiveLists()
        {
            return ExceptField("abilityActiveLists");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithItemUsedEvents(ItemUsedEventTypeQueryBuilder itemUsedEventTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("itemUsedEvents", alias, itemUsedEventTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptItemUsedEvents()
        {
            return ExceptField("itemUsedEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithPlayerUpdatePositionEvents(PlayerUpdatePositionDetailTypeQueryBuilder playerUpdatePositionDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("playerUpdatePositionEvents", alias, playerUpdatePositionDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptPlayerUpdatePositionEvents()
        {
            return ExceptField("playerUpdatePositionEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithPlayerUpdateGoldEvents(PlayerUpdateGoldDetailTypeQueryBuilder playerUpdateGoldDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("playerUpdateGoldEvents", alias, playerUpdateGoldDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptPlayerUpdateGoldEvents()
        {
            return ExceptField("playerUpdateGoldEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithPlayerUpdateAttributeEvents(PlayerUpdateAttributeDetailTypeQueryBuilder playerUpdateAttributeDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("playerUpdateAttributeEvents", alias, playerUpdateAttributeDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptPlayerUpdateAttributeEvents()
        {
            return ExceptField("playerUpdateAttributeEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithPlayerUpdateLevelEvents(PlayerUpdateLevelDetailTypeQueryBuilder playerUpdateLevelDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("playerUpdateLevelEvents", alias, playerUpdateLevelDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptPlayerUpdateLevelEvents()
        {
            return ExceptField("playerUpdateLevelEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithPlayerUpdateHealthEvents(PlayerUpdateHealthDetailTypeQueryBuilder playerUpdateHealthDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("playerUpdateHealthEvents", alias, playerUpdateHealthDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptPlayerUpdateHealthEvents()
        {
            return ExceptField("playerUpdateHealthEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithPlayerUpdateBattleEvents(PlayerUpdateBattleDetailTypeQueryBuilder playerUpdateBattleDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("playerUpdateBattleEvents", alias, playerUpdateBattleDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptPlayerUpdateBattleEvents()
        {
            return ExceptField("playerUpdateBattleEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithKillEvents(KillDetailTypeQueryBuilder killDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("killEvents", alias, killDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptKillEvents()
        {
            return ExceptField("killEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithDeathEvents(DeathDetailTypeQueryBuilder deathDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("deathEvents", alias, deathDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptDeathEvents()
        {
            return ExceptField("deathEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithAssistEvents(AssistDetailTypeQueryBuilder assistDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("assistEvents", alias, assistDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptAssistEvents()
        {
            return ExceptField("assistEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithCsEvents(LastHitDetailTypeQueryBuilder lastHitDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("csEvents", alias, lastHitDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptCsEvents()
        {
            return ExceptField("csEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithGoldEvents(GoldDetailTypeQueryBuilder goldDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("goldEvents", alias, goldDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptGoldEvents()
        {
            return ExceptField("goldEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithExperienceEvents(ExperienceDetailTypeQueryBuilder experienceDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("experienceEvents", alias, experienceDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptExperienceEvents()
        {
            return ExceptField("experienceEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithHealEvents(HealDetailTypeQueryBuilder healDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("healEvents", alias, healDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptHealEvents()
        {
            return ExceptField("healEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithHeroDamageEvents(HeroDamageDetailTypeQueryBuilder heroDamageDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("heroDamageEvents", alias, heroDamageDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptHeroDamageEvents()
        {
            return ExceptField("heroDamageEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithTowerDamageEvents(TowerDamageDetailTypeQueryBuilder towerDamageDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("towerDamageEvents", alias, towerDamageDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptTowerDamageEvents()
        {
            return ExceptField("towerDamageEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithInventoryEvents(InventoryTypeQueryBuilder inventoryTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("inventoryEvents", alias, inventoryTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptInventoryEvents()
        {
            return ExceptField("inventoryEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithPurchaseEvents(ItemPurchaseTypeQueryBuilder itemPurchaseTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("purchaseEvents", alias, itemPurchaseTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptPurchaseEvents()
        {
            return ExceptField("purchaseEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithBuyBackEvents(BuyBackDetailTypeQueryBuilder buyBackDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("buyBackEvents", alias, buyBackDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptBuyBackEvents()
        {
            return ExceptField("buyBackEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithStreakEvents(StreakEventTypeQueryBuilder streakEventTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("streakEvents", alias, streakEventTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptStreakEvents()
        {
            return ExceptField("streakEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithRuneEvents(PlayerRuneDetailTypeQueryBuilder playerRuneDetailTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("runeEvents", alias, playerRuneDetailTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptRuneEvents()
        {
            return ExceptField("runeEvents");
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder WithSpiritBearInventoryEvents(SpiritBearInventoryTypeQueryBuilder spiritBearInventoryTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("spiritBearInventoryEvents", alias, spiritBearInventoryTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public MatchPlayerPlaybackDataTypeQueryBuilder ExceptSpiritBearInventoryEvents()
        {
            return ExceptField("spiritBearInventoryEvents");
        }
    }
}
