// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class PlayerBadgeTypeQueryBuilder : GraphQlQueryBuilder<PlayerBadgeTypeQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "badgeId" },
                new GraphQlFieldMetadata { Name = "slot" },
                new GraphQlFieldMetadata { Name = "createdDateTime" }
            };

        protected override string TypeName { get { return "PlayerBadgeType"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public PlayerBadgeTypeQueryBuilder WithBadgeId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("badgeId", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerBadgeTypeQueryBuilder ExceptBadgeId()
        {
            return ExceptField("badgeId");
        }

        public PlayerBadgeTypeQueryBuilder WithSlot(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("slot", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerBadgeTypeQueryBuilder ExceptSlot()
        {
            return ExceptField("slot");
        }

        public PlayerBadgeTypeQueryBuilder WithCreatedDateTime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdDateTime", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerBadgeTypeQueryBuilder ExceptCreatedDateTime()
        {
            return ExceptField("createdDateTime");
        }
    }
}
