// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class MatchStatsPickBanTypeQueryBuilder : GraphQlQueryBuilder<MatchStatsPickBanTypeQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "isPick" },
                new GraphQlFieldMetadata { Name = "heroId" },
                new GraphQlFieldMetadata { Name = "order" },
                new GraphQlFieldMetadata { Name = "bannedHeroId" },
                new GraphQlFieldMetadata { Name = "isRadiant" },
                new GraphQlFieldMetadata { Name = "playerIndex" },
                new GraphQlFieldMetadata { Name = "wasBannedSuccessfully" },
                new GraphQlFieldMetadata { Name = "isCaptain" },
                new GraphQlFieldMetadata { Name = "baseWinRate" },
                new GraphQlFieldMetadata { Name = "adjustedWinRate" },
                new GraphQlFieldMetadata { Name = "letter" }
            };

        protected override string TypeName { get { return "MatchStatsPickBanType"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public MatchStatsPickBanTypeQueryBuilder WithIsPick(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isPick", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsPickBanTypeQueryBuilder ExceptIsPick()
        {
            return ExceptField("isPick");
        }

        public MatchStatsPickBanTypeQueryBuilder WithHeroId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("heroId", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsPickBanTypeQueryBuilder ExceptHeroId()
        {
            return ExceptField("heroId");
        }

        public MatchStatsPickBanTypeQueryBuilder WithOrder(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("order", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsPickBanTypeQueryBuilder ExceptOrder()
        {
            return ExceptField("order");
        }

        public MatchStatsPickBanTypeQueryBuilder WithBannedHeroId(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("bannedHeroId", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsPickBanTypeQueryBuilder ExceptBannedHeroId()
        {
            return ExceptField("bannedHeroId");
        }

        public MatchStatsPickBanTypeQueryBuilder WithIsRadiant(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isRadiant", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsPickBanTypeQueryBuilder ExceptIsRadiant()
        {
            return ExceptField("isRadiant");
        }

        public MatchStatsPickBanTypeQueryBuilder WithPlayerIndex(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("playerIndex", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsPickBanTypeQueryBuilder ExceptPlayerIndex()
        {
            return ExceptField("playerIndex");
        }

        public MatchStatsPickBanTypeQueryBuilder WithWasBannedSuccessfully(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("wasBannedSuccessfully", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsPickBanTypeQueryBuilder ExceptWasBannedSuccessfully()
        {
            return ExceptField("wasBannedSuccessfully");
        }

        public MatchStatsPickBanTypeQueryBuilder WithIsCaptain(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isCaptain", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsPickBanTypeQueryBuilder ExceptIsCaptain()
        {
            return ExceptField("isCaptain");
        }

        public MatchStatsPickBanTypeQueryBuilder WithBaseWinRate(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("baseWinRate", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsPickBanTypeQueryBuilder ExceptBaseWinRate()
        {
            return ExceptField("baseWinRate");
        }

        public MatchStatsPickBanTypeQueryBuilder WithAdjustedWinRate(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("adjustedWinRate", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsPickBanTypeQueryBuilder ExceptAdjustedWinRate()
        {
            return ExceptField("adjustedWinRate");
        }

        public MatchStatsPickBanTypeQueryBuilder WithLetter(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("letter", alias, new GraphQlDirective[] { include, skip });
        }

        public MatchStatsPickBanTypeQueryBuilder ExceptLetter()
        {
            return ExceptField("letter");
        }
    }
}
